### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Use JavaScript Date object for date/time fields."""
scalar DateTime

input DeleteTodoInput {
  id: Int!
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  createOneTodo(data: TodoCreateInput!): Todo!
  deleteTodo(data: DeleteTodoInput!): Todo
  updateTodo(data: UpdateTodoInput!): Todo
}

type Query {
  me: User
  todos: [Todo!]
}

enum Role {
  ADMIN
  USER
}

type Todo {
  author: User!
  authorId: Int!
  createdAt: DateTime!
  id: Int!
  text: String!
}

input TodoCreateInput {
  author: UserCreateOneWithoutTodosInput!
  createdAt: DateTime
  text: String!
}

input TodoWhereUniqueInput {
  id: Int
}

input UpdateTodoInput {
  id: Int!
  text: String
}

type User {
  email: String!
  id: Int!
  name: String!
  todos(after: TodoWhereUniqueInput, before: TodoWhereUniqueInput, first: Int, last: Int): [Todo!]!
}

input UserCreateOneWithoutTodosInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTodosInput
}

input UserCreateWithoutTodosInput {
  createdAt: DateTime
  email: String!
  name: String!
  role: Role
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
